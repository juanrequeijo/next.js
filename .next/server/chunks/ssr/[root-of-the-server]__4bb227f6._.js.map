{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/lib/db/schema.ts"],"sourcesContent":["import { pgTable, serial, text, timestamp, varchar, boolean, integer } from 'drizzle-orm/pg-core';\n\nexport const users = pgTable('users', {\n  id: serial('id').primaryKey(),\n  name: varchar('name', { length: 100 }).notNull(),\n  phoneNumber: varchar('phone_number', { length: 15 }).notNull().unique(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n});\n\nexport const conversations = pgTable('conversations', {\n  id: serial('id').primaryKey(),\n  title: varchar('title', { length: 255 }),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n});\n\nexport const conversationUsers = pgTable('conversation_users', {\n  id: serial('id').primaryKey(),\n  conversationId: integer('conversation_id').notNull().references(() => conversations.id),\n  userId: integer('user_id').notNull().references(() => users.id),\n  isAdmin: boolean('is_admin').default(false).notNull(),\n  joinedAt: timestamp('joined_at').defaultNow().notNull(),\n});\n\nexport const messages = pgTable('messages', {\n  id: serial('id').primaryKey(),\n  senderId: integer('sender_id').notNull().references(() => users.id),\n  content: text('content').notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  conversationId: integer('conversation_id').notNull().references(() => conversations.id),\n});"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,QAAQ,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,SAAS;IACpC,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,MAAM,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;QAAE,QAAQ;IAAI,GAAG,OAAO;IAC9C,aAAa,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,gBAAgB;QAAE,QAAQ;IAAG,GAAG,OAAO,GAAG,MAAM;IACrE,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,GAAG,OAAO;IACvD,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,GAAG,OAAO;AACzD;AAEO,MAAM,gBAAgB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB;IACpD,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,SAAS;QAAE,QAAQ;IAAI;IACtC,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,GAAG,OAAO;IACvD,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,GAAG,OAAO;AACzD;AAEO,MAAM,oBAAoB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,sBAAsB;IAC7D,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,gBAAgB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,mBAAmB,OAAO,GAAG,UAAU,CAAC,IAAM,cAAc,EAAE;IACtF,QAAQ,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,WAAW,OAAO,GAAG,UAAU,CAAC,IAAM,MAAM,EAAE;IAC9D,SAAS,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,YAAY,OAAO,CAAC,OAAO,OAAO;IACnD,UAAU,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,aAAa,UAAU,GAAG,OAAO;AACvD;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IAC1C,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,UAAU,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,aAAa,OAAO,GAAG,UAAU,CAAC,IAAM,MAAM,EAAE;IAClE,SAAS,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,WAAW,OAAO;IAChC,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU,GAAG,OAAO;IACvD,gBAAgB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,mBAAmB,OAAO,GAAG,UAAU,CAAC,IAAM,cAAc,EAAE;AACxF","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/lib/db/index.ts"],"sourcesContent":["import { drizzle } from 'drizzle-orm/postgres-js';\nimport postgres from 'postgres';\nimport * as schema from './schema';\n\nconst connectionString = process.env.DATABASE_URL;\n\nif (!connectionString) {\n  throw new Error('DATABASE_URL environment variable is not set');\n}\n\nconst client = postgres(connectionString);\n\nexport const db = drizzle(client, { schema });\n\nexport * from './schema';"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,mBAAmB,QAAQ,GAAG,CAAC,YAAY;AAEjD,IAAI,CAAC,kBAAkB;IACrB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,CAAA,GAAA,wIAAA,CAAA,UAAQ,AAAD,EAAE;AAEjB,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/features/chat/repository.ts"],"sourcesContent":["import { conversations, conversationUsers, db, messages, users } from \"@/lib/db\";\nimport { eq, desc, and, sql } from \"drizzle-orm\";\nimport { Message, CreateMessage } from \"./types\";\n\nexport const getAllConversationsForUserWithLastMessage = async (userId: number) => {\n    const userConversations = await db\n        .select({\n            conversationId: conversations.id,\n            conversationTitle: conversations.title,\n        })\n        .from(conversations)\n        .innerJoin(conversationUsers, and(\n            eq(conversationUsers.conversationId, conversations.id),\n            eq(conversationUsers.userId, userId)\n        ));\n\n    const conversationsWithLastMessage = await Promise.all(\n        userConversations.map(async (conv) => {\n            const lastMessage = await db\n                .select({\n                    content: messages.content,\n                    createdAt: messages.createdAt,\n                    senderId: messages.senderId,\n                    senderName: users.name,\n                })\n                .from(messages)\n                .innerJoin(users, eq(users.id, messages.senderId))\n                .where(eq(messages.conversationId, conv.conversationId))\n                .orderBy(desc(messages.createdAt))\n                .limit(1);\n\n            return {\n                conversationId: conv.conversationId,\n                conversationTitle: conv.conversationTitle,\n                lastMessageContent: lastMessage[0]?.content || null,\n                lastMessageCreatedAt: lastMessage[0]?.createdAt || null,\n                lastMessageSenderId: lastMessage[0]?.senderId || null,\n                lastMessageAuthorName: lastMessage[0]?.senderName || null,\n            };\n        })\n    );\n\n    return conversationsWithLastMessage\n        .filter(conv => conv.lastMessageCreatedAt !== null)\n        .sort((a, b) => {\n            const dateA = a.lastMessageCreatedAt ? new Date(a.lastMessageCreatedAt).getTime() : 0;\n            const dateB = b.lastMessageCreatedAt ? new Date(b.lastMessageCreatedAt).getTime() : 0;\n            return dateB - dateA;\n        });\n}\n\nexport const getMessagesByConversationId = async (conversationId: number): Promise<Message[]> => {\n    const messagesList = await db.select().from(messages).where(eq(messages.conversationId, conversationId));\n    return messagesList;\n}\n\nexport const createMessageForConversation = async (createMessage: CreateMessage): Promise<Message> => {\n    const newMessage = {\n        conversationId: createMessage.conversationId,\n        content: createMessage.content,\n        senderId: createMessage.senderId,\n    };\n    const [createdMessage] = await db.insert(messages).values(newMessage).returning();\n    return createdMessage;\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AACA;AAAA;;;AAGO,MAAM,4CAA4C,OAAO;IAC5D,MAAM,oBAAoB,MAAM,yIAAA,CAAA,KAAE,CAC7B,MAAM,CAAC;QACJ,gBAAgB,0HAAA,CAAA,gBAAa,CAAC,EAAE;QAChC,mBAAmB,0HAAA,CAAA,gBAAa,CAAC,KAAK;IAC1C,GACC,IAAI,CAAC,0HAAA,CAAA,gBAAa,EAClB,SAAS,CAAC,0HAAA,CAAA,oBAAiB,EAAE,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EAC5B,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,oBAAiB,CAAC,cAAc,EAAE,0HAAA,CAAA,gBAAa,CAAC,EAAE,GACrD,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,oBAAiB,CAAC,MAAM,EAAE;IAGrC,MAAM,+BAA+B,MAAM,QAAQ,GAAG,CAClD,kBAAkB,GAAG,CAAC,OAAO;QACzB,MAAM,cAAc,MAAM,yIAAA,CAAA,KAAE,CACvB,MAAM,CAAC;YACJ,SAAS,0HAAA,CAAA,WAAQ,CAAC,OAAO;YACzB,WAAW,0HAAA,CAAA,WAAQ,CAAC,SAAS;YAC7B,UAAU,0HAAA,CAAA,WAAQ,CAAC,QAAQ;YAC3B,YAAY,0HAAA,CAAA,QAAK,CAAC,IAAI;QAC1B,GACC,IAAI,CAAC,0HAAA,CAAA,WAAQ,EACb,SAAS,CAAC,0HAAA,CAAA,QAAK,EAAE,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,QAAK,CAAC,EAAE,EAAE,0HAAA,CAAA,WAAQ,CAAC,QAAQ,GAC/C,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,WAAQ,CAAC,cAAc,EAAE,KAAK,cAAc,GACrD,OAAO,CAAC,CAAA,GAAA,8JAAA,CAAA,OAAI,AAAD,EAAE,0HAAA,CAAA,WAAQ,CAAC,SAAS,GAC/B,KAAK,CAAC;QAEX,OAAO;YACH,gBAAgB,KAAK,cAAc;YACnC,mBAAmB,KAAK,iBAAiB;YACzC,oBAAoB,WAAW,CAAC,EAAE,EAAE,WAAW;YAC/C,sBAAsB,WAAW,CAAC,EAAE,EAAE,aAAa;YACnD,qBAAqB,WAAW,CAAC,EAAE,EAAE,YAAY;YACjD,uBAAuB,WAAW,CAAC,EAAE,EAAE,cAAc;QACzD;IACJ;IAGJ,OAAO,6BACF,MAAM,CAAC,CAAA,OAAQ,KAAK,oBAAoB,KAAK,MAC7C,IAAI,CAAC,CAAC,GAAG;QACN,MAAM,QAAQ,EAAE,oBAAoB,GAAG,IAAI,KAAK,EAAE,oBAAoB,EAAE,OAAO,KAAK;QACpF,MAAM,QAAQ,EAAE,oBAAoB,GAAG,IAAI,KAAK,EAAE,oBAAoB,EAAE,OAAO,KAAK;QACpF,OAAO,QAAQ;IACnB;AACR;AAEO,MAAM,8BAA8B,OAAO;IAC9C,MAAM,eAAe,MAAM,yIAAA,CAAA,KAAE,CAAC,MAAM,GAAG,IAAI,CAAC,0HAAA,CAAA,WAAQ,EAAE,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,WAAQ,CAAC,cAAc,EAAE;IACxF,OAAO;AACX;AAEO,MAAM,+BAA+B,OAAO;IAC/C,MAAM,aAAa;QACf,gBAAgB,cAAc,cAAc;QAC5C,SAAS,cAAc,OAAO;QAC9B,UAAU,cAAc,QAAQ;IACpC;IACA,MAAM,CAAC,eAAe,GAAG,MAAM,yIAAA,CAAA,KAAE,CAAC,MAAM,CAAC,0HAAA,CAAA,WAAQ,EAAE,MAAM,CAAC,YAAY,SAAS;IAC/E,OAAO;AACX","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/features/chat/server.ts"],"sourcesContent":["import { createMessageForConversation, getAllConversationsForUserWithLastMessage, getMessagesByConversationId } from \"./repository\";\n\nexport const getUserConversations = async (userId: number) => {\n    try {\n        const conversations = await getAllConversationsForUserWithLastMessage(userId);\n        return conversations.map(conversation => ({\n            id: conversation.conversationId.toString(),\n            title: conversation.conversationTitle || 'Untitled Conversation',\n            lastMessage: {\n                content: conversation.lastMessageContent,\n                createdAt: conversation.lastMessageCreatedAt,\n                senderId: conversation.lastMessageSenderId,\n                authorName: conversation.lastMessageAuthorName,\n            }\n        }));\n    } catch (error) {\n        console.error('Error fetching conversations:', error);\n        throw error;\n    }\n}\n\nexport const getMessagesForConversation = async (conversationId: number) => {\n    try {\n        const messages = await getMessagesByConversationId(conversationId);\n        return messages.map(message => ({\n            id: message.id,\n            content: message.content,\n            createdAt: message.createdAt,\n            senderId: message.senderId,\n        }));\n    } catch (error) {\n        console.error('Error fetching messages:', error);\n        throw error;\n    }\n}\n\nexport const sendMessage = async (senderId: number, conversationId: number, content: string) => {\n    try {\n        const newMessage = createMessageForConversation({\n            conversationId,\n            content,\n            senderId,\n        });\n        return newMessage;\n    } catch (error) {\n        console.error('Error sending message:', error);\n        throw error;\n    }\n}"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,uBAAuB,OAAO;IACvC,IAAI;QACA,MAAM,gBAAgB,MAAM,CAAA,GAAA,qIAAA,CAAA,4CAAyC,AAAD,EAAE;QACtE,OAAO,cAAc,GAAG,CAAC,CAAA,eAAgB,CAAC;gBACtC,IAAI,aAAa,cAAc,CAAC,QAAQ;gBACxC,OAAO,aAAa,iBAAiB,IAAI;gBACzC,aAAa;oBACT,SAAS,aAAa,kBAAkB;oBACxC,WAAW,aAAa,oBAAoB;oBAC5C,UAAU,aAAa,mBAAmB;oBAC1C,YAAY,aAAa,qBAAqB;gBAClD;YACJ,CAAC;IACL,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACV;AACJ;AAEO,MAAM,6BAA6B,OAAO;IAC7C,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,qIAAA,CAAA,8BAA2B,AAAD,EAAE;QACnD,OAAO,SAAS,GAAG,CAAC,CAAA,UAAW,CAAC;gBAC5B,IAAI,QAAQ,EAAE;gBACd,SAAS,QAAQ,OAAO;gBACxB,WAAW,QAAQ,SAAS;gBAC5B,UAAU,QAAQ,QAAQ;YAC9B,CAAC;IACL,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACV;AACJ;AAEO,MAAM,cAAc,OAAO,UAAkB,gBAAwB;IACxE,IAAI;QACA,MAAM,aAAa,CAAA,GAAA,qIAAA,CAAA,+BAA4B,AAAD,EAAE;YAC5C;YACA;YACA;QACJ;QACA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/features/chat/actions.ts"],"sourcesContent":["'use server';\n\nimport { getUserConversations, getMessagesForConversation, sendMessage } from './server';\n\nexport async function fetchUserConversations(userId: number) {\n  return await getUserConversations(userId);\n}\n\nexport async function fetchConversationMessages(conversationId: number) {\n  return await getMessagesForConversation(conversationId);\n}\n\nexport async function sendMessageAction(senderId: number, conversationId: number, content: string) {\n  return await sendMessage(senderId, conversationId, content);\n}"],"names":[],"mappings":";;;;;;AAEA;;;;AAEO,eAAe,uBAAuB,MAAc;IACzD,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,uBAAoB,AAAD,EAAE;AACpC;AAEO,eAAe,0BAA0B,cAAsB;IACpE,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,6BAA0B,AAAD,EAAE;AAC1C;AAEO,eAAe,kBAAkB,QAAgB,EAAE,cAAsB,EAAE,OAAe;IAC/F,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD,EAAE,UAAU,gBAAgB;AACrD;;;IAVsB;IAIA;IAIA;;AARA,+OAAA;AAIA,+OAAA;AAIA,+OAAA","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {fetchConversationMessages as '40470835687ecd846140dee928b899d13fcd0b5eaf'} from 'ACTIONS_MODULE0'\nexport {fetchUserConversations as '4071b4c13220d37f9a5e0d26580c633fb26d0cdce5'} from 'ACTIONS_MODULE0'\nexport {sendMessageAction as '70f2948f1f8537f5dab920d3b0fe2f38a12870f5d6'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/components/chat/chat-container.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/chat/chat-container.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/chat/chat-container.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/components/chat/chat-container.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/chat/chat-container.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/chat/chat-container.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juan_/Downloads/full-stack-process/full-stack-process/src/app/page.tsx"],"sourcesContent":["import { fetchUserConversations } from '@/features/chat/actions';\nimport ChatContainer from '@/components/chat/chat-container';\n\nexport default async function Home() {\n  const userId = 1;\n\n  let conversations;\n  try {\n    conversations = await fetchUserConversations(userId);\n  } catch (error) {\n    console.error('Error fetching conversations:', error);\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-background\">\n        <div className=\"text-center\">\n          <p className=\"text-muted-foreground\">Failed to load conversations. Please try again later.</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!conversations || conversations.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-background\">\n        <div className=\"text-center\">\n          <p className=\"text-muted-foreground\">No conversations found.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return <ChatContainer initialConversations={conversations} userId={userId} />;\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,SAAS;IAEf,IAAI;IACJ,IAAI;QACF,gBAAgB,MAAM,CAAA,GAAA,kIAAA,CAAA,yBAAsB,AAAD,EAAE;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;;;;;IAI7C;IAEA,IAAI,CAAC,iBAAiB,cAAc,MAAM,KAAK,GAAG;QAChD,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;;;;;IAI7C;IAEA,qBAAO,8OAAC,+IAAA,CAAA,UAAa;QAAC,sBAAsB;QAAe,QAAQ;;;;;;AACrE","debugId":null}}]
}